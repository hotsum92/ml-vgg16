#!/usr/bin/env python

from tensorflow.keras.applications.vgg16 import VGG16
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.vgg16 import preprocess_input
from tensorflow.keras.models import Model
import numpy as np

base_model = VGG16(weights='imagenet')
print(base_model.summary())

layer_name_list = []
for layer in base_model.layers:
    # print(layer)
    # print(layer.name)
    layer_name_list.append(layer.name)

print(len(layer_name_list))
print(layer_name_list)

sample_output = base_model.get_layer('block1_pool').output
print('sample output:', sample_output)
print('sample output shape:', sample_output.shape)
print('sample output type:', type(sample_output))

output_list = [base_model.get_layer('block1_pool').output,
               base_model.get_layer('block2_pool').output,
               base_model.get_layer('block3_pool').output,
               base_model.get_layer('block4_pool').output,
               base_model.get_layer('block5_pool').output]

active_model = Model(inputs=base_model.input,
                     outputs=output_list)

img_path = './tmp.webp'
img = image.load_img(img_path, target_size=(224,224))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
print(x.shape)
x = preprocess_input(x)

features = active_model.predict(x)

print('number_of_outputs', len(features))
print('1st outputs shape', features[0].shape)
print('2nd outputs shape', features[1].shape)
print('3rd outputs shape', features[2].shape)
print('4st outputs shape', features[3].shape)
print('5st outputs shape', features[4].shape)

import matplotlib.pyplot as plt

fig, ax = plt.subplots(nrows=1, ncols=5, figsize=(12,4) )
ax[0].imshow(features[0][0,:,:,63])
ax[1].imshow(features[1][0,:,:,127])
ax[2].imshow(features[2][0,:,:,255])
ax[3].imshow(features[3][0,:,:,511])
ax[4].imshow(features[4][0,:,:,511])

plt.savefig('output.png')
